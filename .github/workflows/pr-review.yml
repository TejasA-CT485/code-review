# name: Python Lint and Unused Variable Check

# on:
#   pull_request:
#     types: [opened, synchronize, reopened]

# jobs:
#   lint-and-check-unused-vars:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.10'  # or your preferred version

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 vulture

#     - name: Run flake8 for linting
#       run: |
#         echo "Running flake8..."
#         flake8 . --ignore=E501 --exit-zero > flake8.log
#         cat flake8.log
#         if [ -s flake8.log ]; then
#           echo "Linting issues found!"
#           exit 1
#         fi

#     - name: Run vulture for unused code
#       run: |
#         echo "Running vulture..."
#         vulture . > vulture.log || true
#         cat vulture.log
#         if grep -q -E 'unused variable|unused import' vulture.log; then
#           echo "Unused variables or imports detected!"
#           exit 1
#         fi
#         if [ -s vulture.log ]; then
#           echo "Unused code detected!"
#           exit 1
#         fi


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 vulture

    - name: Run lint and unused checks
      id: lint
      run: |
        echo "Running flake8..."
        flake8 . --ignore=E501 --exit-zero > flake8.log
        echo "Running vulture..."
        vulture . > vulture.log || true

        cat flake8.log
        cat vulture.log

        # Combine logs
        echo "### :x: CI Failed due to linting or unused code" > pr_comment.md
        echo "" >> pr_comment.md
        echo "#### Flake8 Lint Report:" >> pr_comment.md
        echo '```' >> pr_comment.md
        cat flake8.log >> pr_comment.md
        echo '```' >> pr_comment.md
        echo "" >> pr_comment.md
        echo "#### Vulture Unused Code Report:" >> pr_comment.md
        echo '```' >> pr_comment.md
        cat vulture.log >> pr_comment.md
        echo '```' >> pr_comment.md

        # Determine if we should fail
        if [ -s flake8.log ] || [ -s vulture.log ]; then
          echo "CI_FAILED=true" >> $GITHUB_ENV
        fi

    - name: Post PR comment if failed
      if: env.CI_FAILED == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr comment ${{ github.event.pull_request.number }} --body-file pr_comment.md
        exit 1  # Make sure the job fails
